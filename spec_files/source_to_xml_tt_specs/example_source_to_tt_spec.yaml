timetable_header:
  # The sim id that appears in the XML tt in the root tag.
  sim_id: 'newport'
  # The sim version that appears in the XML tt in the root tag.
  version: '5.8.6'
  # The name of the timetable
  name: 'newport_test'
  # The description of the timetable
  description: 'A test timetable'
  # The start time for the timetable in hhmm
  start_time: '0400'
  # The end time for the timetable in hhmm
  finish_time: '2500'
  # Timetable versioning properties
  v_major: '0'
  v_minor: '0'
  v_build: '1'
  # The template given for train descriptions, will be applied if the train has a description of $template.
  train_description_template: '$originTime $originName-$destName $operator ($stock)'

# Name of the train categories map we wish to use.
train_categories_file: 'default_categories_map.yaml'

# An example of the source pages we can pull info from.
charlwoodhouse_location_pages:
  'http://charlwoodhouse.co.uk/rail/liverail/full/nwp/':
    start: '0400'
    end: '0800'
  'http://charlwoodhouse.co.uk/rail/liverail/sum/LWERWJN/':
    start: '0400'
    end: '0800'


# To use stored html files use charlwoodhouse_location_files instead. Each location page will require the filepath from the charlwoodhouse.co.uk directory
#charlwoodhouse_location_files:
#  'charlwoodhouse.co.uk/rail/liverail/full/ABDARE/14/02/20.html':
#    start: '0400'
#    end: '0800'
#  'charlwoodhouse.co.uk/rail/liverail/sum/ABDARE/14/02/20.html':
#    start: '0400'
#    end: '0800'

# If stored files are used then also use the charlwood_files_root to specify where the 'charlwoodhouse.co.uk' directory is located relative to where the script is run
# Leave empty if the files root is in the same directory as the python script.
charlwood_files_root: 'C:/directory/another/'

# run with false if you're not sure if one already exists
overwrite_tt_with_same_name: True
# If true, this will overwrite the trains in the TinyDb instance with the tt name
overwrite_trains: True