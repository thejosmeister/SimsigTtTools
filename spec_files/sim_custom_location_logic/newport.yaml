# Custom Location logic for the Newport sim
# Split into logic for sim entry points and locations in the sim.

# The rules are set on a per location/entry_point basis. If a tyrain contains the location/entry point then the rules will be applied.
# You can use any readable or TIPLOC name for a location that is given in the sim location map (location_maps/{sim_id}.txt


# Entry point rules
entry_point_rules:
  # Example of when you have an entry location that is after locations on the sim that only trains in the other direction use (Westerleigh jn on Swindon is an example)
  DUMMY:
    # name(s) of locations we want to get rud of if train has entry 'DUMMY'
    list_to_delete_if_before: ['a location', 'another_location']

  # Trains with this entry point will be subject to this rule.
  EMSHFILD:
    # The code will set the Marshfield entry point ot the mains by default. This logic can be used to set the entry to the reliefs if TT data suggests a train uses them.
    if_later_location_matching:
      # Conditons the train locations must match
      conditions:
        # The train must have newport as a location and the platform is 'URL' (up through line)
        - { 'location':'Newport', 'plat': 'URL' }
      # What will change if conditions are met.
      then:
        # Set entry to Marshfield Reliefs
        - entry_point: 'EMSHFILDR'
        # Remove 1st instance Marshfield location from train location list (needed for valid TT data)
        - remove_1st_of: [ 'Marshfield' ]


# Location rules
location_rules:
  'dummy location':
    # Rule not implemented yet.
    - if_x_y_z_then_delete_y:
        x: 'first'
        y: 'second'
        z: 'third'

  # If STJ is in the train locations.
  'Severn Tunnel Junction':
    # We want to set certain paths/plats/lines if 2 locations are concurrent
    - if_x_y_concurrent:
        # Conditions for 1st location, in this case we are just matching on name
        x_conditions:
          - { 'location': 'Severn Tunnel Junction' }
        # Conditions for 2nd location.
        y_conditions:
          - { 'location': 'Severn Tunnel West' }
        # Need to make the platform number 3 at STJ for valid TT data.
        then:
          - modify_location:  { 'location': 'Severn Tunnel Junction', 'plat': '3' }

    # Another variation of the rule above.
    - if_x_y_concurrent:
        x_conditions:
          - { 'location': 'Severn Tunnel Junction' }
        y_conditions:
          - { 'location': 'SEVTUGL' }
        then:
          - modify_location: { 'location': 'Severn Tunnel Junction', 'plat': '3' }